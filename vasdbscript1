CREATE TABLE BILL_MASTER(
TRANS_NO NUMBER constraint pk_bm_trans_no primary key,
TRANS_DT DATE not null,
IMP_YEAR     NUMBER(4) not null,
IMP_PERIOD   VARCHAR2(2 BYTE) not null,
IMP_MONTH   VARCHAR2(2 BYTE) not null,
SERVICE_CODE  VARCHAR2(10 BYTE) not null,
post_flag varchar2(1),
post_by      VARCHAR2(15 BYTE),
post_dt      DATE,
CREATE_BY      VARCHAR2(15 BYTE)              NOT NULL,
CREATE_DT      DATE                           DEFAULT SYSDATE               NOT NULL,
UPDATE_BY      VARCHAR2(15 BYTE),
UPDATE_DT      DATE,
constraint uk_bm_ypms unique(imp_year,imp_period,imp_month,service_code));

CREATE TABLE BILL_DETAIL
(TRANS_ID NUMBER constraint pk_bd_trans_id primary key,
TRANS_NO  constraint fk_bd_trans_no references bill_master(trans_no) not null,
 S_NO     constraint fk_bd_sp_code references m_sp(sp_code) not null,
 SHARING_TYPE  VARCHAR2(1 BYTE) NOT NULL,
 ITEM_CODE VARCHAR2(10) NOT NULL,
 DR_CR_FLAG number,
 AMT NUMBER,
 Royalty_amt number,
 tsc_amt number,
 vat_amt number,
CREATE_BY      VARCHAR2(15 BYTE)              NOT NULL,
  CREATE_DT      DATE                           DEFAULT SYSDATE               NOT NULL,
  UPDATE_BY      VARCHAR2(15 BYTE),
  UPDATE_DT      DATE);

CREATE OR REPLACE PROCEDURE VASNTW.VAS_BILL_POSTING(inyear number, ivperiod varchar2, 
   ivmonth varchar2, ivservice varchar2,  ivuser varchar2) IS
  lv_char varchar2(1);
BEGIN
   BEGIN
      SELECT 'x' into lv_char FROM bill_master 
      WHERE imp_year=inyear
      AND imp_period=ivperiod
      AND imp_month=ivmonth
      AND service_code=ivservice;
   EXCEPTION WHEN NO_DATA_FOUND THEN
      BEGIN
         INSERT INTO bill_master(trans_no, trans_dt, imp_year, imp_period, imp_month,
         service_code, post_flag, post_by, post_dt, create_by, create_dt)
         VALUES(1,sysdate, inyear,ivperiod, ivmonth, ivservice, 'N', null, null, ivuser, sysdate);
         FOR i in(SELECT s_no, sharing_type, sum(bill_mt) amt, sum(royalty_per*bill_mt) royalty,
           ((sum(bill_mt)-sum(royalty_per*bill_mt))*13/100) vat
                  FROM sms_netting
                  WHERE imp_year=inyear
          AND imp_period=ivperiod
          AND imp_month=ivmonth
          AND service_code=ivservice
          GROUP BY s_no, sharing_type
                  ORDER BY s_no, sharing_type)
         LOOP
           INSERT INTO bill_detail(trans_id,trans_no, s_no, sharing_type, item_code, dr_cr_flag, 
           amt, royalty_amt, tsc_amt, vat_amt, create_by, create_dt)
           VALUES(1,1,i.s_no, i.sharing_type, ivservice, decode (i.sharing_type,'Y',-1,1),
           nvl(i.amt,0), nvl(i.royalty,0), 0, nvl(i.vat,0), ivuser, sysdate);
         END LOOP;
                
      EXCEPTION WHEN OTHERS THEN
          dbms_output.put_line('error');
      END;  
   END;
END;
----------------------------------------------
CREATE OR REPLACE PROCEDURE VASNTW.VAS_NETTING(inyear number, ivperiod varchar2, 
ivmonth varchar2, ivservice varchar2,  ivuser varchar2) IS
   ln_count NUMBER:=0;
   lv_error varchar2(200);
   lv_sharing_type VARCHAR2(10); 
      ln_share_nt_per number:=0; 
      lv_afs varchar2(10); 
      ln_qty number:=0; 
      lv_cp_code varchar2(10);
      lv_package_type varchar2(10);
      ln_rate number:=0;
      ln_ratio number:=0;
      ln_1st_mo number:=0;
      ln_1st_mt number:=0;
      ln_tot_mo number:=0;
      ln_tot_mt number:=0;
      ln_1st_diff_nt number:=0;
      ln_1st_diff_sp number:=0;
      ln_1st number:=0;
      ln_1_reduce number:=0;
      ln_mt_bill number:=0;
      ln_trans_id number:=0;
      ln_range_from number:=0; 
      ln_range_to number:=0;
      ld_start_dt date;
      ln_royalty number:=0;
      ln_vat number:=0;
BEGIN
   
   FOR i IN(SELECT  imp_year, imp_period, imp_month, service_code, s_no, esme_code, rate, 
            mo_1st_nt,  mo_1st_sp, mt_1st_nt, mt_1st_sp, post_flag
            FROM v_sum_compare
            WHERE imp_year=inyear
            AND imp_period=ivperiod
            AND imp_month=ivmonth
            AND service_code=ivservice
            AND post_flag='N')
   LOOP
      ld_start_dt :=null;
      lv_sharing_type :=null; 
      ln_share_nt_per :=0; 
      lv_afs :=null;
      ln_qty :=0; 
      lv_cp_code :=null;
      lv_package_type :=null;
      ln_rate :=0;
      ln_ratio:=0;
      ln_1st_diff_nt :=0;
      ln_1st_diff_sp :=0;
      ln_1st :=0;
      ln_1st_mo :=0;
      ln_1st_mt :=0;
      ln_tot_mo :=0;
      ln_tot_mt :=0;
      ln_1_reduce :=0;
      ln_mt_bill :=0;
      ln_range_from :=0; 
      ln_range_to :=0;
      
      BEGIN
         SELECT sharing_type, share_nt_per, afs_flag, min_qty, cp_code, package_type, start_dt 
         INTO lv_sharing_type, ln_share_nt_per, lv_afs, ln_qty, lv_cp_code, lv_package_type, ld_start_dt
         from m_cp
         WHERE service_code=i.service_code
         AND sp_code=i.s_no
         AND esme_code=i.esme_code
         AND rownum<2;
         IF lv_sharing_type='Y' THEN
            ln_royalty:=get_tax_rate('ROYALTY',sysdate);
            ln_vat:=get_tax_rate('VAT',sysdate);
         ELSE
            ln_royalty:=0;
            ln_vat:=0;
         END IF;      
      EXCEPTION WHEN NO_DATA_FOUND THEN
             lv_afs:='N';
             ln_qty:=0;
             ln_royalty:=0;
             ln_vat:=0;
      END;
      IF i.service_code NOT IN('APP','WAP','IVR') THEN
         BEGIN
            SELECT nvl(rate,0), nvl(mo_mt_Ratio,1), range_from, range_to INTO ln_rate, ln_ratio, ln_range_from, ln_range_to
            FROM m_wap_app_tariff
            WHERE service_code=i.service_code
            AND package_type=lv_package_type
            AND effective_dt<=(select max(effective_dt) FROM m_wap_app_tariff
                               WHERE service_code=i.service_code
                               AND package_type=lv_package_type
                               AND effective_dt<=sysdate
                               AND ROWNUM<2);
         EXCEPTION WHEN NO_DATA_FOUND THEN
                 --MESSAGE(' Rate and mo mt not define for esme '||i.esme_code);
                 --MESSAGE(' Rate and mo mt not define for esme '||i.esme_code);
                 ln_rate:=null;
                 --RAISE FORM_TRIGGER_FAILURE;
         END;      
      ELSE
         BEGIN
            SELECT nvl(rate,0) INTO ln_rate
            FROM m_cp_detail
            WHERE cp_code=lv_cp_code
            AND effective_dt<=(select max(effective_dt) FROM m_cp_detail
                               WHERE cp_code=lv_cp_code
                               AND effective_dt<=sysdate
                               AND ROWNUM<2);
         EXCEPTION WHEN NO_DATA_FOUND THEN
                 --MESSAGE(' Rate and mo mt not define for esme '||i.esme_code);
                 --MESSAGE(' Rate and mo mt not define for esme '||i.esme_code);
                 ln_rate:=null;
                 --RAISE FORM_TRIGGER_FAILURE;
         END;
      END IF;      
      IF ln_rate is null THEN
        IF lv_sharing_type='Y' THEN
            IF i.service_code NOT IN('APP','WAP','IVR') THEN
                ln_1st_mo:=least(i.mo_1st_nt,  i.mo_1st_sp);
                ln_tot_mo:=ln_1st_mo;
                ln_1st_mt:=greatest(i.mt_1st_nt,  i.mt_1st_sp);
                ln_tot_mt:=ln_1st_mt;
                ln_1st_diff_nt:=i.mt_1st_nt-(ln_ratio*i.mo_1st_nt);
                ln_1st_diff_sp:=i.mt_1st_sp-(ln_ratio*ln_1st_mo);
                IF ln_1st_diff_nt<0 THEN
                     ln_1st_diff_nt:=0;
                END IF;     
                IF ln_1st_diff_sp<0 THEN
                     ln_1st_diff_sp:=0;
                END IF;     
                IF ln_1st_diff_nt>=ln_1st_diff_sp THEN
                    IF ln_1st_diff_nt>0 THEN
                        ln_1st:=     ln_1st_diff_nt;
                    END IF;
                ELSE
                    ln_1st:=greatest(ln_1st_diff_nt,ln_1st_diff_sp);    
                END IF;
            ELSE   
                ln_1st_mo:=least(i.mo_1st_nt,  i.mo_1st_sp);
                ln_tot_mo:=ln_1st_mo;
                ln_1st_mt:=least(i.mt_1st_nt,  i.mt_1st_sp);
                ln_tot_mt:=ln_1st_mt;
            END IF;
            IF i.mo_1st_nt<i.mo_1st_sp THEN
                IF nvl(i.mt_1st_nt,0)<>0 THEN
                    ln_1_reduce:=i.mo_1st_sp-i.mo_1st_nt;
                ELSE   
                    ln_1_reduce:=i.mt_1st_sp-i.mt_1st_nt;
                END IF;   
            END IF;
            ln_1st:=nvl(ln_tot_mo,0)+nvl(ln_tot_mt,0);
        ELSE
           IF i.service_code NOT IN('APP','WAP','IVR') THEN
                IF lv_afs is null then 
                  lv_afs:='N';
                END IF;
                IF lv_afs='N' THEN
                    ln_1st_mo:=nvl(i.mt_1st_sp,0)-nvl(i.mo_1st_sp,0); --sp
                    ln_1st_mt:=nvl(i.mt_1st_nt,0)-nvl(i.mo_1st_nt,0); --nt
                    IF ln_1st_mo<0 THEN
                        ln_1st_mo:=0;
                    END IF;
                    IF ln_1st_mt<0 THEN
                        ln_1st_mt:=0;
                    END IF;
                    IF inyear>=2073 THEN
                        if nvl(i.mt_1st_sp,0)=0 and nvl(i.mo_1st_sp,0)=0 and nvl(i.mt_1st_nt,0)=0 and nvl(i.mo_1st_nt,0)=0 THEN
                          ln_1st:=0;
                        ELSE    
                            --ln_1st:=greatest(ln_1st_mo, ln_1st_mt,ln_qty);
                            ln_1st:=greatest(ln_1st_mo, ln_1st_mt,ln_range_from);
                        END IF;   
                    ELSE   
             	        ln_1st:=greatest(ln_1st_mo, ln_1st_mt);
                    END IF;   
                ELSIF lv_afs='Y' THEN
      	            ln_1st_mo:=null;
                    ln_1st_mt:=null;
                    ln_1st:=greatest(i.mo_1st_nt, i.mt_1st_nt,  i.mo_1st_sp, i.mt_1st_sp);
                END IF;
           END IF;   
        END IF;
        ln_mt_bill:=(ln_1st);   
        IF lv_sharing_type='N' THEN
      	     ln_mt_bill:=ln_mt_bill*ln_rate;
      	    ln_1st:=ln_1st*ln_rate;
        END If;
         BEGIN
            INSERT INTO sms_netting(trans_id, imp_year, imp_period, imp_month, service_code, s_no, esme_code, sharing_type, 
                              share_nt_per, rate, start_dt, 
         	                          mo1nt, mt1nt, mo1sp, mt1sp, mo1final, mt1final, 
         	                          reduce1, bill_mt, MO_MT_RATIO, royalty_per,vat_per,
         	                          create_dt, create_by, post_flag)
         	                   VALUES(ln_trans_id, inyear, ivperiod, ivmonth, ivservice, i.s_no,  i.esme_code, lv_sharing_type, 
                                      ln_share_nt_per, ln_rate, sysdate,
         	                           i.mo_1st_nt, i.mt_1st_nt,  i.mo_1st_sp, i.mt_1st_sp, ln_1st_mo, ln_1st_mt,
         	                           ln_1_reduce, ln_mt_bill,  ln_ratio, ln_royalty, ln_vat,
         	                           sysdate, ivuser, 'N');
         
         	             
      	       
      	       update imp_nt
      	       set post_flag='Y'
      	       WHERE service_code=ivservice
               AND imp_year=inyear
      	       AND imp_period=ivperiod
      	       AND s_no=i.s_no
      	       AND esme_code=i.esme_code
      	       AND post_flag='N';
      	      
      	       update imp_sp
      	       set post_flag='Y'
      	       WHERE service_code=ivservice
               AND imp_year=inyear
      	       AND imp_period=ivperiod
      	       AND s_no=i.s_no
      	       AND esme_code=i.esme_code
      	       AND post_flag='N';
         EXCEPTION WHEN OTHERS THEN 
             null;
         END;
      END IF;   	  	 
   END LOOP;

EXCEPTION
     WHEN OTHERS THEN
     rollback;
       -- Consider logging the error and then re-raise
       RAISE;
END VAS_NETTING;
/
--------------------------------------
15sep2019
----------------------------------------
CREATE SEQUENCE VASNTW.SEQ_BILL_TRANS_NO
  START WITH 1
  MAXVALUE 999999
  MINVALUE 0
  CYCLE
  NOCACHE
  ORDER;


CREATE SEQUENCE VASNTW.SEQ_BILL_TRANS_ID
  START WITH 1
  MAXVALUE 999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  ORDER;
  
  CREATE OR REPLACE PROCEDURE VASNTW.VAS_BILL_POSTING(inyear number, ivperiod varchar2, 
   ivmonth varchar2, ivservice varchar2,  ivuser varchar2) IS
  lv_char varchar2(1);
  ln_trans_no number;
  POSTED_EXCEPTION EXCEPTION;
BEGIN
   BEGIN
      SELECT post_flag, trans_no into lv_char, ln_trans_no FROM bill_master 
      WHERE imp_year=inyear
      AND imp_period=ivperiod
      AND imp_month=ivmonth
      AND service_code=ivservice;
      IF lv_char='Y' THEN
         RAISE POSTED_EXCEPTION;
      END IF;   
      IF lv_char='N' THEN
         delete from bill_detail
         WHERE trans_no=ln_trans_no;
         FOR i in(SELECT s_no, sharing_type, sum(bill_mt) amt, sum(royalty_per*bill_mt/100) royalty,
           ((sum(bill_mt)-sum(royalty_per*bill_mt/100))*13/100) vat
                  FROM sms_netting
                  WHERE imp_year=inyear
          AND imp_period=ivperiod
          AND imp_month=ivmonth
          AND service_code=ivservice
          GROUP BY s_no, sharing_type
                  ORDER BY s_no, sharing_type)
         LOOP
           INSERT INTO bill_detail(trans_id,trans_no, s_no, sharing_type, item_code, dr_cr_flag, 
           amt, royalty_amt, tsc_amt, vat_amt, create_by, create_dt)
           VALUES(SEQ_BILL_TRANS_ID.NEXTVAL,ln_trans_no,i.s_no, i.sharing_type, ivservice, decode (i.sharing_type,'Y',-1,1),
           nvl(i.amt,0), nvl(i.royalty,0), 0, nvl(i.vat,0), ivuser, sysdate);
           UPDATE sms_netting set post_flag='Y'
           WHERE imp_year=inyear
           AND imp_period=ivperiod
           AND imp_month=ivmonth
           AND service_code=ivservice
           AND s_no=i.s_no
           AND sharing_type=i.sharing_type;
           commit;
         END LOOP;
      END IF;
   EXCEPTION WHEN NO_DATA_FOUND THEN
      BEGIN
         SELECT SEQ_BILL_TRANS_NO.NEXTVAL INTO ln_trans_no from dual;
         ln_trans_no:=inyear||substr((inyear+1),3,2)||LPAD(ln_trans_no,6,'0');
         
         INSERT INTO bill_master(trans_no, trans_dt, imp_year, imp_period, imp_month,
         service_code, post_flag, post_by, post_dt, create_by, create_dt)
         VALUES(ln_trans_no,sysdate, inyear,ivperiod, ivmonth, ivservice, 'N', null, null, ivuser, sysdate);
         FOR i in(SELECT s_no, sharing_type, sum(bill_mt) amt, sum(royalty_per*bill_mt/100) royalty,
           ((sum(bill_mt)-sum(royalty_per*bill_mt/100))*13/100) vat
                  FROM sms_netting
                  WHERE imp_year=inyear
          AND imp_period=ivperiod
          AND imp_month=ivmonth
          AND service_code=ivservice
          GROUP BY s_no, sharing_type
                  ORDER BY s_no, sharing_type)
         LOOP
           INSERT INTO bill_detail(trans_id,trans_no, s_no, sharing_type, item_code, dr_cr_flag, 
           amt, royalty_amt, tsc_amt, vat_amt, create_by, create_dt)
           VALUES(SEQ_BILL_TRANS_ID.NEXTVAL,ln_trans_no,i.s_no, i.sharing_type, ivservice, decode (i.sharing_type,'Y',-1,1),
           nvl(i.amt,0), nvl(i.royalty,0), 0, nvl(i.vat,0), ivuser, sysdate);
           UPDATE sms_netting set post_flag='Y'
           WHERE imp_year=inyear
           AND imp_period=ivperiod
           AND imp_month=ivmonth
           AND service_code=ivservice
           AND s_no=i.s_no
           AND sharing_type=i.sharing_type;
           commit; 
         END LOOP;
   
      EXCEPTION WHEN OTHERS THEN
          dbms_output.put_line('error');
          ROLLBACK;
      END;  
   WHEN  POSTED_EXCEPTION THEN
     DBMS_OUTPUT.PUT_LINE('Already Posted');
   WHEN OTHERS THEN
          dbms_output.put_line('error');
          ROLLBACK;    
   END;
END;
/
-------------------------------26sep2019====================
CREATE TABLE VASNTW.BILL_MASTER
(
  TRANS_NO      NUMBER CONSTRAINT PK_BM_TRANS_NO PRIMARY KEY,
  TRANS_DT      DATE                            NOT NULL,
  IMP_YEAR      NUMBER(4)                       NOT NULL,
  IMP_PERIOD    VARCHAR2(2 BYTE)                NOT NULL,
  IMP_MONTH     VARCHAR2(2 BYTE)                NOT NULL,
  S_NO          VARCHAR2(8 BYTE) NOT NULL,
  POST_FLAG     VARCHAR2(1 BYTE),
  POST_BY       VARCHAR2(15 BYTE),
  POST_DT       DATE,
  CREATE_BY     VARCHAR2(15 BYTE)               NOT NULL,
  CREATE_DT     DATE                            DEFAULT SYSDATE               NOT NULL,
  UPDATE_BY     VARCHAR2(15 BYTE),
  UPDATE_DT     DATE,
    CONSTRAINT UK_BM_YPMS UNIQUE (IMP_YEAR, IMP_PERIOD, IMP_MONTH, S_NO)
  
)
;

ALTER TABLE VASNTW.BILL_MASTER ADD (
  CONSTRAINT FK_BM_SP_CODE 
 FOREIGN KEY (S_NO) 
 REFERENCES VASNTW.M_SP (SP_CODE));
 
CREATE TABLE VASNTW.BILL_DETAIL
(
  TRANS_ID      NUMBER CONSTRAINT PK_BD_TRANS_ID PRIMARY KEY,
  TRANS_NO      NUMBER                          NOT NULL,
  SERVICE_CODE  VARCHAR2(10 BYTE)               NOT NULL,
  SHARING_TYPE  VARCHAR2(1 BYTE)                NOT NULL,
  ITEM_CODE     VARCHAR2(10 BYTE)               NOT NULL,
  DR_CR_FLAG    NUMBER,
  AMT           NUMBER,
  ROYALTY_AMT   NUMBER,
  TSC_AMT       NUMBER,
  VAT_AMT       NUMBER,
  CREATE_BY     VARCHAR2(15 BYTE)               NOT NULL,
  CREATE_DT     DATE                            DEFAULT SYSDATE               NOT NULL,
  UPDATE_BY     VARCHAR2(15 BYTE),
  UPDATE_DT     DATE
)
;

ALTER TABLE VASNTW.BILL_DETAIL ADD (
  CONSTRAINT FK_BD_TRANS_NO 
 FOREIGN KEY (TRANS_NO) 
 REFERENCES VASNTW.BILL_MASTER (TRANS_NO));
---------------
CREATE OR REPLACE PROCEDURE VASNTW.VAS_BILL_POSTING(inyear number, ivperiod varchar2, 
   ivmonth varchar2, ivservice varchar2,  ivuser varchar2) IS
  lv_char varchar2(1);
  ln_trans_no number;
  POSTED_EXCEPTION EXCEPTION;
BEGIN
   FOR i in(SELECT s_no, sharing_type, sum(bill_mt) amt, sum(royalty_per*bill_mt/100) royalty,
           ((sum(bill_mt)-sum(royalty_per*bill_mt/100))*13/100) vat
                  FROM sms_netting
                  WHERE imp_year=inyear
          AND imp_period=ivperiod
          AND imp_month=ivmonth
          AND service_code=ivservice
          GROUP BY s_no, sharing_type
          ORDER BY s_no, sharing_type)
   LOOP
      BEGIN
         SELECT post_flag, trans_no into lv_char, ln_trans_no FROM bill_master 
         WHERE imp_year=inyear
         AND imp_period=ivperiod
         AND imp_month=ivmonth
         AND s_no=i.s_no;
         IF lv_char='Y' THEN
            DBMS_OUTPUT.PUT_LINE(i.s_no||'Already Posted'||ln_trans_no);
         END IF;  
         IF lv_char='N' THEN
            delete from bill_detail
            WHERE trans_no=ln_trans_no AND service_code=ivservice;
            INSERT INTO bill_detail(trans_id,trans_no, service_code, sharing_type, item_code, dr_cr_flag, 
                amt, royalty_amt, tsc_amt, vat_amt, create_by, create_dt)
            VALUES(SEQ_BILL_TRANS_ID.NEXTVAL,ln_trans_no,ivservice, i.sharing_type, ivservice, decode (i.sharing_type,'Y',-1,1),
                    nvl(i.amt,0), nvl(i.royalty,0), 0, nvl(i.vat,0), ivuser, sysdate);
            UPDATE sms_netting set post_flag='Y'
            WHERE imp_year=inyear
            AND imp_period=ivperiod
            AND imp_month=ivmonth
            AND service_code=ivservice
            AND s_no=i.s_no
            AND sharing_type=i.sharing_type;
            commit;
         END IF;    
      EXCEPTION WHEN NO_DATA_FOUND THEN
         SELECT SEQ_BILL_TRANS_NO.NEXTVAL INTO ln_trans_no from dual;
         ln_trans_no:=inyear||substr((inyear+1),3,2)||LPAD(ln_trans_no,6,'0');
         INSERT INTO bill_master(trans_no, trans_dt, imp_year, imp_period, imp_month,
                s_no, post_flag, post_by, post_dt, create_by, create_dt)
         VALUES(ln_trans_no,sysdate, inyear,ivperiod, ivmonth, i.s_no, 'N', null, null, ivuser, sysdate);
         INSERT INTO bill_detail(trans_id,trans_no, service_code, sharing_type, item_code, dr_cr_flag, 
                amt, royalty_amt, tsc_amt, vat_amt, create_by, create_dt)
         VALUES(SEQ_BILL_TRANS_ID.NEXTVAL,ln_trans_no,ivservice, i.sharing_type, ivservice, decode (i.sharing_type,'Y',-1,1),
                nvl(i.amt,0), nvl(i.royalty,0), 0, nvl(i.vat,0), ivuser, sysdate);
         UPDATE sms_netting set post_flag='Y'
         WHERE imp_year=inyear
         AND imp_period=ivperiod
         AND imp_month=ivmonth
         AND service_code=ivservice
         AND s_no=i.s_no
         AND sharing_type=i.sharing_type;
         commit;
      END;
   END LOOP;
END;
/
-------------------------
CREATE TABLE RECEIPT_MASTER
(
  CC_CODE       VARCHAR2(5 BYTE),
  RECEIPT_NO    NUMBER(20),
  RECEIPT_DT    DATE                            NOT NULL,
  TRANS_FROM    VARCHAR2(10 BYTE)               NOT NULL,
  S_NO         VARCHAR2(12 BYTE) NOT NULL,
  PAYMENT_MODE  VARCHAR2(1 BYTE)                NOT NULL,
  BANK_CD       VARCHAR2(1 BYTE)                NOT NULL,
  BANK_NAME     VARCHAR2(100 BYTE),
  CHEQUE_NO     VARCHAR2(30 BYTE),
  BANK_ADDRESS  VARCHAR2(100 BYTE),
  PAID_AMT      NUMBER,
  BAL_AMT      NUMBER,
  TSC           NUMBER,
  VAT           NUMBER,
  ROYALTY       NUMBER,
  REMARKS       VARCHAR2(250 BYTE),
  CANCEL_FLAG   VARCHAR2(1 BYTE),
  CANCEL_BY     VARCHAR2(20 BYTE),
  CANCEL_DT   DATE,
  POST_FLAG     VARCHAR2(1 BYTE),
  POST_BY       VARCHAR2(20 BYTE),
  POST_DT     DATE,
  CREATE_BY    VARCHAR2(20 BYTE)               NOT NULL,
  CREATE_DT  DATE                            DEFAULT sysdate               NOT NULL,
  UPDATE_BY    VARCHAR2(20 BYTE),
  UPDATE_DT  DATE,
  CONSTRAINT PK_RM_CC_RN PRIMARY KEY (CC_CODE, RECEIPT_NO)
)
;
ALTER TABLE RECEIPT_MASTER ADD (
  CONSTRAINT FK_RM_SP
 FOREIGN KEY (S_NO) 
 REFERENCES M_SP (SP_CODE),
  CONSTRAINT FK_CM_CC 
 FOREIGN KEY (CC_CODE) 
 REFERENCES M_COLL_CENTER (CC_CODE));
 
 CREATE TABLE PAYMENT_MASTER
(
  CC_CODE       VARCHAR2(5 BYTE),
  PAYMENT_NO    NUMBER(20),
  PAYMENT_DT    DATE                            NOT NULL,
  TRANS_FROM    VARCHAR2(10 BYTE)               NOT NULL,
  S_NO         VARCHAR2(12 BYTE) NOT NULL,
  PAYMENT_MODE  VARCHAR2(1 BYTE)                NOT NULL,
  BANK_CD       VARCHAR2(1 BYTE)                NOT NULL,
  CHEQUE_NO     VARCHAR2(30 BYTE),
  BANK_ADDRESS  VARCHAR2(100 BYTE),
  PAID_AMT      NUMBER,
  BAL_AMT      NUMBER,
  TSC           NUMBER,
  VAT           NUMBER,
  ROYALTY       NUMBER,
  REMARKS       VARCHAR2(250 BYTE),
  CANCEL_FLAG   VARCHAR2(1 BYTE),
  CANCEL_BY     VARCHAR2(20 BYTE),
  CANCEL_DT   DATE,
  POST_FLAG     VARCHAR2(1 BYTE),
  POST_BY       VARCHAR2(20 BYTE),
  POST_DT     DATE,
  CREATE_BY    VARCHAR2(20 BYTE)               NOT NULL,
  CREATE_DT  DATE                            DEFAULT sysdate               NOT NULL,
  UPDATE_BY    VARCHAR2(20 BYTE),
  UPDATE_DT  DATE,
  CONSTRAINT PK_PM_CC_RN PRIMARY KEY (CC_CODE, PAYMENT_NO)
)
;


ALTER TABLE PAYMENT_MASTER ADD (
  CONSTRAINT FK_PM_SP
 FOREIGN KEY (S_NO) 
 REFERENCES M_SP (SP_CODE),
  CONSTRAINT FK_PM_CC 
 FOREIGN KEY (CC_CODE) 
 REFERENCES M_COLL_CENTER (CC_CODE));


--------------------------------27sep2019-

    CREATE SEQUENCE VASNTW.SEQ_RECEIPT_NO
  START WITH 1
  MAXVALUE 999999
  MINVALUE 0
  CYCLE
  NOCACHE
  ORDER;
  create or replace view vw_bill as SELECT a.trans_no, (a.imp_year||'/'||a.imp_month ||'/'||'01') nep_inv_dt, a.trans_dt, a.imp_year, a.imp_period, a.imp_month, a.s_no,
a.post_flag, a.post_by, a.post_dt, b.trans_id, b.service_code, b.sharing_type,
b.item_code, b.dr_cr_flag, b.dr_cr_flag*nvl(b.amt,0) amt, b.dr_cr_flag*nvl(b.royalty_amt,0) royalty_amt, 
b.dr_cr_flag*nvl(b.tsc_amt,0) tsc_amt, b.dr_cr_flag*nvl(b.vat_amt,0) vat_amt, 
b.dr_cr_flag*decode(b.sharing_type,'Y', (nvl(b.amt,0)-nvl(b.royalty_amt,0)-nvl(b.vat_amt,0)-nvl(b.tsc_amt,0)),(nvl(b.amt,0)+nvl(b.royalty_amt,0)+nvl(b.vat_amt,0)+nvl(b.tsc_amt,0))) total_amt
FROM bill_master a, bill_detail b
WHERE a.trans_no=b.trans_no
order by 4,6,7;
----------30sep2019
DROP VIEW VASNTW.VW_LEDGER;

/* Formatted on 2019/09/30 16:14 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW vasntw.vw_ledger (trans_type,
                                               trans_no,
                                               trans_dt,
                                               imp_year,
                                               imp_month,
                                               imp_period,
                                               s_no,
                                               trans_id,
                                               service_code,
                                               sharing_type,
                                               item_code,
                                               dr_cr_flag,
                                               amt,
                                               royalty,
                                               tsc_amt,
                                               vat_amt,
                                               total_amt,
                                               post_flag,
                                               post_by,
                                               post_dt,
                                               create_by,
                                               create_dt
                                              )
AS
   (SELECT 'IV' trans_type, trans_no, common.to_ad (nep_inv_dt) trans_dt,
           imp_year, imp_month, imp_period, s_no, trans_id, service_code,
           sharing_type, item_code, dr_cr_flag, amt, royalty_amt royalty,
           tsc_amt, vat_amt, total_amt, post_flag, post_by, post_dt,
           create_by, create_dt
      FROM vw_bill
    UNION ALL
    SELECT 'RV' trans_type, receipt_no trans_no, receipt_dt trans_dt,
           TO_NUMBER (SUBSTR (common.to_bs (receipt_dt), 1, 4)) imp_year,
           SUBSTR (common.to_bs (receipt_dt), 6, 2) imp_month,
           NULL imp_period, s_no, 1 trans_id, NULL service_code,
           NULL sharing_type, bank_cd item_code, -1 dr_cr_flag,
           -1 * paid_amt amt, 0 royalty, 0 tsc_amt, 0 vat_amt,
           -1 * paid_amt total_amt, post_flag, post_by, post_dt, create_by,
           create_dt
      FROM receipt_master
     WHERE cancel_flag = 'N');

CREATE OR REPLACE FORCE VIEW vasntw.vw_bill (trans_no,
                                             nep_inv_dt,
                                             trans_dt,
                                             imp_year,
                                             imp_period,
                                             imp_month,
                                             s_no,
                                             post_flag,
                                             post_by,
                                             post_dt,
                                             trans_id,
                                             service_code,
                                             sharing_type,
                                             item_code,
                                             dr_cr_flag,
                                             amt,
                                             royalty_amt,
                                             tsc_amt,
                                             vat_amt,
                                             total_amt,
                                             create_by,
                                             create_dt
                                            )
AS
   SELECT   a.trans_no,
            (a.imp_year || '/' || a.imp_month || '/' || '01') nep_inv_dt,
            a.trans_dt, a.imp_year, a.imp_period, a.imp_month, a.s_no,
            a.post_flag, a.post_by, a.post_dt, b.trans_id, b.service_code,
            b.sharing_type, b.item_code, b.dr_cr_flag,
            b.dr_cr_flag * NVL (b.amt, 0) amt,
            b.dr_cr_flag * NVL (b.royalty_amt, 0) royalty_amt,
            b.dr_cr_flag * NVL (b.tsc_amt, 0) tsc_amt,
            b.dr_cr_flag * NVL (b.vat_amt, 0) vat_amt,
              b.dr_cr_flag
            * DECODE (b.sharing_type,
                      'Y', (  NVL (b.amt, 0)
                            - NVL (b.royalty_amt, 0)
                            - NVL (b.vat_amt, 0)
                            - NVL (b.tsc_amt, 0)
                       ),
                      (  NVL (b.amt, 0)
                       + NVL (b.royalty_amt, 0)
                       + NVL (b.vat_amt, 0)
                       + NVL (b.tsc_amt, 0)
                      )
                     ) total_amt,
            a.create_by, a.create_dt
       FROM bill_master a, bill_detail b
      WHERE a.trans_no = b.trans_no
   ORDER BY 4, 6, 7;


--------------------- service wise monthly revenue pie chart-------------------
select service_code, sum(amt) 
FROM vw_bill
WHERE imp_year=2076
AND imp_month='04'
AND sharing_type='N'
AND post_flag='Y'
group by service_code;
